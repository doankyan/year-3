[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(E:\github\year-3\ppl\assignment3\initial\src\test\scala\CheckerSuite.scala, E:\github\year-3\ppl\assignment3\initial\src\test\scala\TestChecker.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(E:\github\year-3\ppl\assignment3\initial\src\test\scala\CheckerSuite.scala, E:\github\year-3\ppl\assignment3\initial\src\test\scala\TestChecker.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources to E:\github\year-3\ppl\assignment3\initial\target\scala-2.12\test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.1:compile for Scala 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.1:compile for Scala 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 43b707ff for Scala compiler version 2.12.3[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jdk1.8.0_144\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_144\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_144\jre\classes;C:\Users\Doan Ky An\.sbt\boot\scala-2.12.3\lib\scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	E:\github\year-3\ppl\assignment3\initial\target\scala-2.12\test-classes;E:\github\year-3\ppl\assignment3\initial\target\scala-2.12\classes;E:\github\year-3\ppl\assignment3\initial\.\external\antlr-4.6-complete.jar;E:\github\year-3\ppl\assignment3\initial\.\external\jasmin.jar;C:\Users\Doan Ky An\.ivy2\cache\org.scalatest\scalatest_2.12\bundles\scalatest_2.12-3.0.1.jar;C:\Users\Doan Ky An\.ivy2\cache\org.scalactic\scalactic_2.12\bundles\scalactic_2.12-3.0.1.jar;C:\Users\Doan Ky An\.sbt\boot\scala-2.12.3\lib\scala-reflect.jar;C:\Users\Doan Ky An\.ivy2\cache\org.scala-lang.modules\scala-xml_2.12\bundles\scala-xml_2.12-1.0.5.jar;C:\Users\Doan Ky An\.ivy2\cache\org.scala-lang.modules\scala-parser-combinators_2.12\bundles\scala-parser-combinators_2.12-1.0.4.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.976083742 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from CheckerSuite...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(CheckerSuite)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(CheckerSuite)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(CheckerSuite,ModifiedNames(changes = UsedName(runTests,[Default]), UsedName(trap,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(astGen,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(makeSource,[Default]), UsedName(run,[Default]), UsedName($asInstanceOf,[Default]), UsedName(assertionsHelper,[Default]), UsedName(sepa,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(ignore,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(runNestedSuites,[Default]), UsedName(##,[Default]), UsedName(assertThrows,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(suiteName,[Default]), UsedName(timeoutAfter,[Default]), UsedName(testNames,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(equals,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(alert,[Default]), UsedName(!==,[Default]), UsedName(tags,[Default]), UsedName(getClass,[Default]), UsedName(execute$default$2,[Default]), UsedName(execute$default$5,[Default]), UsedName(test,[Default]), UsedName(expectedTestCount,[Default]), UsedName($isInstanceOf,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(execute$default$3,[Default]), UsedName(fail,[Default]), UsedName(nestedSuites,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(withClue,[Default]), UsedName(assert,[Default]), UsedName(execute$default$7,[Default]), UsedName(info,[Default]), UsedName(assume,[Default]), UsedName(soldir,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(AssertionsHelper,[Default]), UsedName(registerTest,[Default]), UsedName(testDataFor,[Default]), UsedName(CheckerSuite,[Default]), UsedName(intercept,[Default]), UsedName(assertTypeError,[Default]), UsedName(checkAst,[Default]), UsedName(pending,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(succeed,[Default]), UsedName(==,[Default]), UsedName(testdir,[Default]), UsedName(execute,[Default]), UsedName(suiteId,[Default]), UsedName(createCatchReporter,[Default]), UsedName(eq,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(NoArgTest,[Default]), UsedName(Equalizer,[Default]), UsedName(ne,[Default]), UsedName(withFixture,[Default]), UsedName(note,[Default]), UsedName(cancel,[Default]), UsedName(testsFor,[Default]), UsedName(===,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(rerunner,[Default]), UsedName(assertResult,[Default]), UsedName(yeOldeTestNames,[Default]), UsedName(runTest,[Default]), UsedName(execute$default$4,[Default]), UsedName(execute$default$1,[Default]), UsedName(checkCkr,[Default]), UsedName(CheckerSuite;init;,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(markup,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(assertCompiles,[Default]), UsedName(styleName,[Default]), UsedName(check,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(execute$default$6,[Default]), UsedName(synchronized,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(notifyAll,[Default]), UsedName(defaultEquality,[Default]))) invalidates 1 classes due to The CheckerSuite has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToEqualizer,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(CheckerSuite)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from TestChecker...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(TestChecker)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding CheckerSuite by TestChecker[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(TestChecker, CheckerSuite)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CheckerSuite: Set(UsedName(test,[Default]), UsedName(TestChecker,[Default]), UsedName(checkAst,[Default]), UsedName(toString,[Default]), UsedName(checkCkr,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(TestChecker,ModifiedNames(changes = UsedName(astGen,[Default]), UsedName(makeSource,[Default]), UsedName($asInstanceOf,[Default]), UsedName(sepa,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(timeoutAfter,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(test,[Default]), UsedName($isInstanceOf,[Default]), UsedName(TestChecker,[Default]), UsedName(soldir,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(checkAst,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(testdir,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(checkCkr,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(check,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]))) invalidates 2 classes due to The TestChecker has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(astGen,[Default]), UsedName(makeSource,[Default]), UsedName($asInstanceOf,[Default]), UsedName(sepa,[Default]), UsedName(isInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(##,[Default]), UsedName(timeoutAfter,[Default]), UsedName(equals,[Default]), UsedName(getClass,[Default]), UsedName(test,[Default]), UsedName($isInstanceOf,[Default]), UsedName(TestChecker,[Default]), UsedName(soldir,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(checkAst,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(testdir,[Default]), UsedName(eq,[Default]), UsedName(ne,[Default]), UsedName(checkCkr,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(finalize,[Default]), UsedName(check,[Default]), UsedName(synchronized,[Default]), UsedName(notifyAll,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(TestChecker, CheckerSuite)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(CheckerSuite)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
